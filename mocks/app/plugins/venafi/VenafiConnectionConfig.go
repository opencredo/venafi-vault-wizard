// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	venafi "github.com/opencredo/venafi-vault-wizard/app/plugins/venafi"
	venafi_wrapper "github.com/opencredo/venafi-vault-wizard/app/plugins/venafi/venafi_wrapper"
	mock "github.com/stretchr/testify/mock"
)

// VenafiConnectionConfig is an autogenerated mock type for the VenafiConnectionConfig type
type VenafiConnectionConfig struct {
	mock.Mock
}

// GetAsMap provides a mock function with given fields: pluginType, vanafiClient
func (_m *VenafiConnectionConfig) GetAsMap(pluginType venafi.PluginType, vanafiClient venafi_wrapper.VenafiWrapper) (map[string]interface{}, error) {
	ret := _m.Called(pluginType, vanafiClient)

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func(venafi.PluginType, venafi_wrapper.VenafiWrapper) map[string]interface{}); ok {
		r0 = rf(pluginType, vanafiClient)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(venafi.PluginType, venafi_wrapper.VenafiWrapper) error); ok {
		r1 = rf(pluginType, vanafiClient)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
